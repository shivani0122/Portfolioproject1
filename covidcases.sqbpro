<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/shivanitripathi/Desktop/Data Analytics using SQL/covidcases.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="6860"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,32:mainVW_PERCENT_POPULATION_VACCINATED"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CovidDeaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="66"/><column index="2" value="57"/><column index="3" value="69"/><column index="4" value="55"/><column index="5" value="75"/><column index="6" value="68"/><column index="7" value="66"/><column index="8" value="124"/><column index="9" value="74"/><column index="10" value="72"/><column index="11" value="129"/><column index="12" value="133"/><column index="13" value="132"/><column index="14" value="189"/><column index="15" value="139"/><column index="16" value="137"/><column index="17" value="195"/><column index="18" value="102"/><column index="19" value="72"/><column index="20" value="138"/><column index="21" value="82"/><column index="22" value="147"/><column index="23" value="131"/><column index="24" value="196"/><column index="25" value="140"/><column index="26" value="206"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="VW_PERCENT_POPULATION_VACCINATED" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="57"/><column index="2" value="56"/><column index="3" value="56"/><column index="4" value="63"/><column index="5" value="102"/><column index="6" value="137"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT *
FROM CovidDeaths
ORDER by 1,2;

Select location,date, total_cases, new_cases, total_deaths,population
From CovidDeaths
order by 1,2;

-- Total cases vs total deaths (CAST is used to convert integer type into float)

Select location, date, total_cases,total_deaths, (cast(total_deaths as real)/total_cases)*100 as death_percentage
From CovidDeaths
WHERE location  like '%states%'
order by 3 desc;

-- Total cases vs Population

Select location, date, population, total_cases, (cast(total_cases as real)/population)*100 as percentpopulationfected
From CovidDeaths
WHERE location like '%states'
order by 1;

-- Countries with highest infection rate compared to population
Select location, population, MAX(total_cases) as max_cases, ((MAX(cast (total_cases as real)))/population)*100 as percentpopulationfected
From CovidDeaths
WHERE continent IS Not NULL
-- WHERE location like '%states'
GROUP BY location, population
order by percentpopulationfected desc;

-- Countries with highest death count per population
SELECT location,MAX(cast(total_deaths as int) )AS total_death_counts
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY total_death_counts desc;

-- Things with continent
SELECT location, MAX(cast(total_deaths as int) )AS total_death_counts
FROM CovidDeaths
WHERE continent IS  NULL AND location like  '%Europe' OR location like '%america%' OR location like  '%Asia%'  
OR location like  'Africa' OR location like  '%Ocean%' 
GROUP BY location
ORDER BY total_death_counts desc;

-- Global Numbers

Select date, SUM(new_cases) as TotalCases, SUM(cast(new_deaths as int)) as TotalDeaths,
( SUM(cast(new_deaths as real))/SUM(new_cases))*100 as DeathPercent
From CovidDeaths
WHERE continent is not null
GROUP BY date
order by 4 desc;

-- TOTAL POPULATION VS VACCINATED
SELECT dea.continent,dea.location,dea.date, dea.population, vac.new_vaccinations ,
SUM(cast(vac.new_vaccinations as int)) OVER (PARTITION By dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM CovidVaccinations vac
JOIN CovidDeaths dea
ON vac.location= dea.location and vac.date= dea.date
WHERE DEA.continent IS NOT NULL
ORDER BY 2,3;

-- We want the to see total vaccinated per population, use CTE for that

WITH VacciPop (continent,location,date, population, new_vaccinations, RollingPeopleVaccinated)
As 
(
SELECT dea.continent,dea.location,dea.date, dea.population, vac.new_vaccinations ,
SUM(cast(vac.new_vaccinations as int)) OVER (PARTITION By dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM CovidVaccinations vac
JOIN CovidDeaths dea
ON vac.location= dea.location and vac.date= dea.date
WHERE DEA.continent IS NOT NULL
)
 SELECT *, (cast(RollingPeopleVaccinated as real)/population)*100 
 FROM VacciPop


-- CREATING VIEW
DROP VIEW IF EXISTS VW_PERCENT_POPULATION_VACCINATED;
CREATE VIEW VW_PERCENT_POPULATION_VACCINATED AS
SELECT dea.continent,dea.location,dea.date, dea.population, vac.new_vaccinations ,
SUM(cast(vac.new_vaccinations as int)) OVER (PARTITION By dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM CovidVaccinations vac
JOIN CovidDeaths dea
ON vac.location= dea.location and vac.date= dea.date
WHERE DEA.continent IS NOT NULL
</sql><current_tab id="0"/></tab_sql></sqlb_project>
